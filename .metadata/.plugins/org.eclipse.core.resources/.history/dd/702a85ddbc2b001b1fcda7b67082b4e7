@startuml
class Prenda <<Entity>>{
	TipoPrenda 	tipoPrenda
	Estado 		estado
	BigDecimal 	precioBase
	Integer		cantidad
	BigDecimal 	precioVenta()
}

note left of Prenda
precioVenta = 
estado.precioVenta(precioBase)
end note

Prenda -left- TipoPrenda
Prenda -right-> Estado

enum TipoPrenda {
	SACO,
	PANTALON,
	CAMISA
}

interface Estado {
	precioVenta(precioBase)
}

class Nueva {
	BigDecimal precioVenta(precioBase)
}
note left of Nueva
En este caso 
no modifican 
el precio base
end note

class Promocion {
	BigDecimal precioVenta(precioBase)
}

note left of Promocion
Le resta un valor fijo
definido por el usuario
end note

class Liquidacion {
	BigDecimal precioVenta(precioBase)
}

note left of Liquidacion
Es un 50% del valor
del producto
end note

Estado ^.. Nueva
Estado ^.. Promocion
Estado ^.. Liquidacion

class Venta {
	Date 		fecha
	Cliente		cliente
	List<Item> 	items	
	BigDecimal 	total()
}

note right of Venta
total =
suma de todos los item.precio
end note

Venta "1" --> "*" Item

class Item {
	Prenda	prenda
	Integer cantidad
	BigDecimal precio()
}

note right of Item
precio =
precio.precioVenta() * cantidad 
end note

Item --> Prenda

class Tienda {
	List<Venta> ventas
	BigDecimal gananciasDia(fecha)
}

Tienda "0" -right-> "*" Venta

class Cliente {
	String nombre
	String apellido
}

Venta "1" <-- "1" Cliente

class VentaTarjeta {
	Integer		cantidadCuotas
	BigDecimal	coeficienteTarjeta
	
}

@enduml